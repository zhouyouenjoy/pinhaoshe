"""
Django settings for photo_gallery project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

# 从pathlib模块导入Path类，用于处理文件路径
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# 构建项目内的路径，BASE_DIR是项目根目录的路径对象
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# 安全警告：在生产环境中要保密这个密钥
# SECRET_KEY是Django用于加密签名的密钥，每个Django项目都必须有唯一的SECRET_KEY
SECRET_KEY = "django-insecure-r%+bs4onfh%9+$&xh-!m4z0ph@6z7u6v$ngj36uh*he-d3$s5%"
# settings.py
AMAP_WEB_KEY = '46xD48lIm4oyiWq1RaKyxhr2ZhkZiCWg'

# SECURITY WARNING: don't run with debug turned on in production!
# 安全警告：在生产环境中不要开启调试模式
# DEBUG为True时会在出错时显示详细的调试信息，开发时方便调试，但生产环境必须设为False
DEBUG = True
# 设置允许访问的主机
# ALLOWED_HOSTS定义了哪些主机可以访问该Django应用
# '*' 表示允许所有主机访问，但在生产环境中应该指定具体的域名或IP地址
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '::1', '[::1]', '[::]', 'a27a720555e5.ngrok-free.app', '2409:8a55:852:b7c1:64b0:e8ae:ec71:3','*']


# 添加媒体文件配置
# 媒体文件是指用户上传的文件，如图片、文档等
import os
# MEDIA_URL是媒体文件的URL前缀
MEDIA_URL = '/media/'
# MEDIA_ROOT是媒体文件在服务器上的存储路径
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 登录和登出后重定向配置
LOGIN_REDIRECT_URL = '/'  # 登录后重定向到首页
LOGOUT_REDIRECT_URL = '/'  # 登出后重定向到首页

# CSRF配置
CSRF_TRUSTED_ORIGINS = [
    'http://localhost',
    'http://localhost:8000',
    'http://127.0.0.1',
    'http://127.0.0.1:8000',
    'https://*.ngrok-free.app',
    'https://*.ngrok.io',
]

# Application definition
# INSTALLED_APPS定义了项目中安装的应用
INSTALLED_APPS = [
    # Django内置应用
    'django.contrib.admin',          # 管理后台
    'django.contrib.auth',           # 用户认证
    'django.contrib.contenttypes',   # 内容类型框架
    'django.contrib.sessions',       # 会话框架
    'django.contrib.messages',       # 消息框架
    'django.contrib.staticfiles',    # 静态文件管理
    'photos.apps.PhotosConfig',      # 添加照片应用（我们自己创建的应用）
    'event.apps.EventConfig',                         # 添加活动应用
    'crawler.apps.CrawlerConfig',                     # 添加爬虫应用
    'channels',                      # 添加channels支持WebSocket
]

# 添加channels相关的配置
ASGI_APPLICATION = 'photo_gallery.asgi.application'

# 配置CHANNEL_LAYERS
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}

# MIDDLEWARE定义了请求/响应处理过程中的中间件
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",        # 安全中间件
    "django.contrib.sessions.middleware.SessionMiddleware", # 会话中间件
    "django.middleware.common.CommonMiddleware",            # 通用中间件
    "django.middleware.csrf.CsrfViewMiddleware",            # CSRF保护中间件
    "django.contrib.auth.middleware.AuthenticationMiddleware", # 认证中间件
    "django.contrib.messages.middleware.MessageMiddleware",    # 消息中间件
    "django.middleware.clickjacking.XFrameOptionsMiddleware",  # 点击劫持保护中间件
]

# ROOT_URLCONF指定根URL配置文件的位置
ROOT_URLCONF = "photo_gallery.urls"

# TEMPLATES定义模板引擎的配置
TEMPLATES = [
    {
        # 使用Django模板引擎
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 模板文件的搜索目录
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # 添加模板目录
        # 是否在应用目录下查找模板文件
        'APP_DIRS': True,
        'OPTIONS': {
            # 模板上下文处理器
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION指定WSGI应用的路径
WSGI_APPLICATION = "photo_gallery.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# DATABASES定义数据库配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',    # 使用MySQL数据库引擎
        'NAME': 'photo_gallery',                 # 数据库名称
        'USER': 'root',                          # 数据库用户名
        'PASSWORD': '123456',                    # 数据库密码
        'HOST': 'localhost',                     # 数据库主机地址
        'PORT': '3306',                          # 数据库端口
        'OPTIONS': {
            'charset': 'utf8mb4',                # 字符集
        },
    },
    'crawler': {
        'ENGINE': 'django.db.backends.mysql',    # 使用MySQL数据库引擎
        'NAME': 'crawler_db',                    # 爬虫专用数据库名称
        'USER': 'root',                          # 数据库用户名
        'PASSWORD': '123456',                    # 数据库密码
        'HOST': 'localhost',                     # 数据库主机地址
        'PORT': '3306',                          # 数据库端口
        'OPTIONS': {
            'charset': 'utf8mb4',                # 字符集
        },
    }
}

# 数据库路由配置
DATABASE_ROUTERS = ['crawler.router.CrawlerRouter']

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
# AUTH_PASSWORD_VALIDATORS定义密码验证规则
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/
# 国际化设置

LANGUAGE_CODE = "zh-hans"  # 语言代码，改为中文

TIME_ZONE = "Asia/Shanghai"        # 时区

USE_I18N = True          # 启用国际化

USE_TZ = False            # 禁用时区支持以避免数据库时区定义缺失问题


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
# 静态文件配置（CSS、JavaScript、图片等）
STATIC_URL = "static/"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field
# 默认主键字段类型
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"