# Generated by Django 5.2.5 on 2025-09-18 09:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CrawledUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                ("nickname", models.CharField(blank=True, max_length=150, null=True)),
                ("avatar_url", models.URLField(blank=True, null=True)),
                (
                    "avatar_local_path",
                    models.ImageField(
                        blank=True, null=True, upload_to="crawler/avatars/"
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("douyin", "抖音"),
                            ("xiaohongshu", "小红书"),
                            ("bilibili", "B站"),
                        ],
                        max_length=20,
                    ),
                ),
                ("platform_user_id", models.CharField(max_length=100)),
                ("profile_url", models.URLField(blank=True, null=True)),
                ("follower_count", models.IntegerField(default=0)),
                ("following_count", models.IntegerField(default=0)),
                ("post_count", models.IntegerField(default=0)),
                ("is_verified", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "爬取用户",
                "verbose_name_plural": "爬取用户",
                "unique_together": {("platform", "platform_user_id")},
            },
        ),
        migrations.CreateModel(
            name="CrawledAlbum",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("douyin", "抖音"),
                            ("xiaohongshu", "小红书"),
                            ("bilibili", "B站"),
                        ],
                        max_length=20,
                    ),
                ),
                ("platform_album_id", models.CharField(max_length=100)),
                ("album_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("photo_count", models.IntegerField(default=0)),
                ("is_crawled", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="albums",
                        to="crawler.crawleduser",
                    ),
                ),
            ],
            options={
                "verbose_name": "爬取相册",
                "verbose_name_plural": "爬取相册",
                "unique_together": {("platform", "platform_album_id")},
            },
        ),
        migrations.CreateModel(
            name="CrawledPhoto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                ("description", models.TextField(blank=True)),
                ("image_url", models.URLField()),
                (
                    "image_local_path",
                    models.ImageField(
                        blank=True, null=True, upload_to="crawler/photos/"
                    ),
                ),
                (
                    "display_image_local_path",
                    models.ImageField(
                        blank=True, null=True, upload_to="crawler/photos/display/"
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("douyin", "抖音"),
                            ("xiaohongshu", "小红书"),
                            ("bilibili", "B站"),
                        ],
                        max_length=20,
                    ),
                ),
                ("platform_photo_id", models.CharField(max_length=100)),
                ("photo_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("crawled_at", models.DateTimeField(auto_now_add=True)),
                ("like_count", models.IntegerField(default=0)),
                ("comment_count", models.IntegerField(default=0)),
                ("share_count", models.IntegerField(default=0)),
                ("is_downloaded", models.BooleanField(default=False)),
                ("is_processed", models.BooleanField(default=False)),
                (
                    "album",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="crawler.crawledalbum",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="crawler.crawleduser",
                    ),
                ),
            ],
            options={
                "verbose_name": "爬取照片",
                "verbose_name_plural": "爬取照片",
                "unique_together": {("platform", "platform_photo_id")},
            },
        ),
    ]
