# Generated by Django 5.2.5 on 2025-09-22 17:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CrawledPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                ("content", models.TextField(blank=True, null=True)),
                ("image_urls", models.JSONField(default=list)),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("douyin", "抖音"),
                            ("xiaohongshu", "小红书"),
                            ("bilibili", "B站"),
                        ],
                        max_length=20,
                    ),
                ),
                ("platform_post_id", models.CharField(max_length=100)),
                ("like_count", models.IntegerField(default=0)),
                ("comment_count", models.IntegerField(default=0)),
                ("share_count", models.IntegerField(default=0)),
                ("posted_at", models.DateTimeField()),
                ("crawled_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "爬取内容",
                "verbose_name_plural": "爬取内容",
            },
        ),
        migrations.CreateModel(
            name="CrawlerUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=150)),
                ("last_name", models.CharField(blank=True, max_length=150)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_superuser", models.BooleanField(default=False)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("avatar_url", models.URLField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "爬虫用户",
                "verbose_name_plural": "爬虫用户",
            },
        ),
        migrations.CreateModel(
            name="CrawledMedia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "media_type",
                    models.CharField(
                        choices=[("image", "图片"), ("video", "视频")], max_length=10
                    ),
                ),
                ("url", models.URLField()),
                ("local_path", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("douyin", "抖音"),
                            ("xiaohongshu", "小红书"),
                            ("bilibili", "B站"),
                        ],
                        max_length=20,
                    ),
                ),
                ("downloaded_at", models.DateTimeField(auto_now_add=True)),
                ("is_downloaded", models.BooleanField(default=False)),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media_files",
                        to="crawler.crawledpost",
                    ),
                ),
            ],
            options={
                "verbose_name": "爬取媒体",
                "verbose_name_plural": "爬取媒体",
            },
        ),
        migrations.CreateModel(
            name="CrawlerPinnedConversation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "other_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crawler_pinned_by_users",
                        to="crawler.crawleruser",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="crawledpost",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="posts",
                to="crawler.crawleruser",
            ),
        ),
        migrations.CreateModel(
            name="Album",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("approved", models.BooleanField(default=False)),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crawler_albums",
                        to="crawler.crawleruser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Photo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="photos/"),
                ),
                (
                    "display_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="photos/display/"
                    ),
                ),
                ("external_url", models.URLField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("approved", models.BooleanField(default=False)),
                (
                    "album",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="crawler.album",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crawler_photos",
                        to="crawler.crawleruser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("avatar_url", models.URLField(blank=True, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "pinned_conversations",
                    models.ManyToManyField(
                        related_name="crawler_userprofile_pinned_in_profiles",
                        through="crawler.CrawlerPinnedConversation",
                        through_fields=("user_profile", "other_user"),
                        to="crawler.crawleruser",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crawler_userprofile",
                        to="crawler.crawleruser",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="crawlerpinnedconversation",
            name="user_profile",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pinned_conversation_records",
                to="crawler.userprofile",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="crawledpost",
            unique_together={("platform", "platform_post_id")},
        ),
        migrations.AlterUniqueTogether(
            name="crawlerpinnedconversation",
            unique_together={("user_profile", "other_user")},
        ),
    ]
